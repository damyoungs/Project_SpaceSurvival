using TMPro;
using UnityEngine;
using UnityEngine.InputSystem;
using UnityEngine.UI;

/// <summary>
/// 저장화면에 보이는 파일 정보 
/// 
/// </summary>
public class SaveDataObject : SaveDataIsPool
{
    /// <summary>
    /// 클릭했을때 오브젝트 인덱스
    /// </summary>
    private int objectIndex = -1;
    public int ObjectIndex { 
        get => objectIndex; 
        set => objectIndex = value; 
    }
    /// <summary>
    /// 내부적인 인덱스값
    /// -1값이면 초기상태
    /// </summary>
    private int fileIndex = -1;
    public int FileIndex { 
        get => fileIndex;
        set {
            fileIndex = value;
            saveFileNameObj.text += fileIndex.ToString("D3");
        }
    }
    /// <summary>
    /// 저장화면에 보일 저장파일 생성날짜
    /// </summary>
    private string createTime = "이천이십삼년유월십육일아홉시십분";
    public string CreateTime { 
        get => createTime;
        set { 
            createTime = value;
            createTimeObj.text = createTime;
        } 
    }
    /// <summary>
    /// 저장화면에 보일 캐릭터이름
    /// </summary>
    private string charcterName = "테스터";
    public string CharcterName { 
        get => charcterName;
        set { 
            charcterName = value;
            charcterInfoObj.text += sceanName;
        }
    }

    /// <summary>
    /// 저장화면에보일 캐릭터 소지금액
    /// </summary>
    private double money = 3333333333333333333;
    public double Money { 
        get => money;
        set { 
            money = value;
            charcterInfoObj.text += $"   {money}";
        }
    }
    /// <summary>
    /// 저장화면에 보일 씬정보
    /// </summary>
    private string sceanName = "따이톨?";
    public string SceanName {
        get => sceanName;
        set { 
            sceanName = value;
            saveFileNameObj.text += $"   {sceanName}";
        }
    }
    /// <summary>
    /// 오브젝트밑에 텍스트 오브젝트들 
    /// </summary>
    [SerializeField]
    TextMeshProUGUI saveFileNameObj; // 파일이름? 
    [SerializeField]
    TextMeshProUGUI charcterInfoObj; // 캐릭터이름 , 저장위치 , 돈 , 레벨 정도?
    [SerializeField]
    TextMeshProUGUI createTimeObj;   // 저장시간 보여주기

    /// <summary>
    /// 생성시 포지션리셋 여부 셋팅
    /// </summary>
    private void Awake()
    {
        //풀에서 처리시 로컬포지션 리셋하지않게 변수셋팅
        isPositionReset = false;
        Button bt = gameObject.AddComponent<Button>();
        bt.onClick.AddListener( () => TestClick());
    }


    protected override void OnEnable()
    {
        base.OnEnable();

    }
    
    
    private void TestClick()
    {
        if (FileIndex > 0) {
            Debug.Log($"{fileIndex} 번째 클릭");
            Debug.Log($"{objectIndex} 이게오브젝트순서");
        }
        else{
            Debug.Log($"{objectIndex} 이게오브젝트순서");
        }

    }
}
